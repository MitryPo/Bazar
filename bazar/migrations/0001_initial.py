# Generated by Django 3.1.6 on 2021-04-10 07:20

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Category name')),
                ('slug', models.SlugField(blank=True, max_length=150, unique=True)),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, verbose_name='City')),
                ('slug', models.SlugField(blank=True, max_length=150, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Cities',
            },
        ),
        migrations.CreateModel(
            name='SubCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Subcategory name')),
                ('slug', models.SlugField(blank=True, max_length=150, unique=True)),
            ],
            options={
                'verbose_name': 'Sub category',
                'verbose_name_plural': 'Sub categories',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Product title')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Product description')),
                ('image', models.ImageField(blank=True, default='D:\\Projects\\bazar\\media/unnamed.png', null=True, upload_to='product_images', verbose_name='Product image')),
                ('price', models.PositiveIntegerField(default=0, verbose_name='Product price')),
                ('sold', models.BooleanField(default=False)),
                ('date_created', models.DateTimeField(default=datetime.datetime.now, verbose_name='Date of publish')),
                ('slug', models.SlugField(blank=True, max_length=150, unique=True)),
                ('category', models.ForeignKey(default=10, on_delete=django.db.models.deletion.CASCADE, to='bazar.category', verbose_name='Category')),
                ('city', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='bazar.city', verbose_name='City')),
            ],
        ),
        migrations.AddField(
            model_name='category',
            name='child',
            field=models.ManyToManyField(blank=True, null=True, to='bazar.SubCategory'),
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('phone', models.CharField(max_length=16, unique=True, verbose_name='Phone number')),
                ('username', models.CharField(blank=True, max_length=50)),
                ('balance', models.PositiveIntegerField(default=0, verbose_name='Balance')),
                ('date_joined', models.DateField(default=datetime.datetime.utcnow, verbose_name='Join date')),
                ('is_online', models.BooleanField(default=False, verbose_name='Is online')),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('products', models.ManyToManyField(blank=True, null=True, related_name='Products', to='bazar.Post')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
